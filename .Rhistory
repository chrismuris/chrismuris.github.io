colnames(master_df)[4] <- "K_DICE"
colnames(master_df)[5] <- "K"
colnames(master_df)[6] <- "M_DICE"
colnames(master_df)[7] <- "M"
colnames(master_df)[8] <- "TEMP_DICE"
colnames(master_df)[9] <- "TEMP"
colnames(master_df)[11] <- "C_DICE"
colnames(master_df)[12] <- "C"
colnames(master_df)[13] <- "mu_DICE"
colnames(master_df)[14] <- "mu"
colnames(master_df)[17] <- "I_DICE"
colnames(master_df)[18] <- "I"
# Declare names of designs
master_df$design <- as.factor(master_df$design)
master_df <- subset(master_df,t>=tstart)
master_df <- subset(master_df,t<=T_plot)
table <- master_df %>% select(design,t,C_DICE,C)
showC <- reshape(table,timevar="design",idvar="t",direction="wide",
v.names=c("C"))
# knitr::kable(show1, caption="Levels",digits=2)
knitr::kable(showC[c(1,6,11,16,20),-2], caption="Levels",digits=2)
table <- master_df %>% select(design,t,mu_DICE,mu)
showmu <- reshape(table,timevar="design",idvar="t",direction="wide",
v.names=c("mu"))
# knitr::kable(show1, caption="Levels",digits=2)
knitr::kable(showmu[c(1,6,11,16,20),-2], caption="Levels",digits=4)
table <- master_df %>% select(design,t,I_DICE,I)
showI <- reshape(table,timevar="design",idvar="t",direction="wide",
v.names=c("I"))
# knitr::kable(show1, caption="Levels",digits=2)
knitr::kable(showI[c(1,6,11,16,20),-2], caption="Levels",digits=2)
showcontrols <- cbind(showC,showmu,showI)
knitr::kable(showcontrols[c(1,6,11,16,20),-c()], digits=4)
knitr::kable(showcontrols[c(1,6,11,16,20),], digits=4)
knitr::kable(showcontrols[c(1,6,11,16,20),-c(1,5,9)], digits=4)
counter <- 0
which_designs <- c(1,3,6,2,4,7)
for(design in 1:length(which_designs)){
counter <- counter + 1
fname_csv <- paste("output-design-",which_designs[design],".csv",sep="")
df <- read.csv(fname_csv)
if(counter==1){master_df <- df}
if(counter>1){master_df <- rbind(master_df,df)}
}
# Set some names
colnames(master_df)[2] <- "design"
colnames(master_df)[3] <- "t"
colnames(master_df)[4] <- "K_DICE"
colnames(master_df)[5] <- "K"
colnames(master_df)[6] <- "M_DICE"
colnames(master_df)[7] <- "M"
colnames(master_df)[8] <- "TEMP_DICE"
colnames(master_df)[9] <- "TEMP"
colnames(master_df)[11] <- "C_DICE"
colnames(master_df)[12] <- "C"
colnames(master_df)[13] <- "mu_DICE"
colnames(master_df)[14] <- "mu"
colnames(master_df)[17] <- "I_DICE"
colnames(master_df)[18] <- "I"
# Declare names of designs
master_df$design <- as.factor(master_df$design)
master_df <- subset(master_df,t>=tstart)
master_df <- subset(master_df,t<=T_plot)
table <- master_df %>% select(design,t,C_DICE,C)
showC <- reshape(table,timevar="design",idvar="t",direction="wide",
v.names=c("C"))
# knitr::kable(show1, caption="Levels",digits=2)
knitr::kable(showC[c(1,6,11,16,20),-2], caption="Levels",digits=2)
counter <- 0
which_designs <- c(4,5,7,8)
for(design in 1:length(which_designs)){
counter <- counter + 1
fname_csv <- paste("output-design-",which_designs[design],".csv",sep="")
df <- read.csv(fname_csv)
if(counter==1){master_df <- df}
if(counter>1){master_df <- rbind(master_df,df)}
}
# Set some names
colnames(master_df)[2] <- "design"
colnames(master_df)[3] <- "t"
colnames(master_df)[4] <- "K_DICE"
colnames(master_df)[5] <- "K"
colnames(master_df)[6] <- "M_DICE"
colnames(master_df)[7] <- "M"
colnames(master_df)[8] <- "TEMP_DICE"
colnames(master_df)[9] <- "TEMP"
colnames(master_df)[11] <- "C_DICE"
colnames(master_df)[12] <- "C"
colnames(master_df)[13] <- "mu_DICE"
colnames(master_df)[14] <- "mu"
colnames(master_df)[17] <- "I_DICE"
colnames(master_df)[18] <- "I"
# Declare names of designs
master_df$design <- as.factor(master_df$design)
master_df <- subset(master_df,t>=tstart)
master_df <- subset(master_df,t<=T_plot)
table <- master_df %>% select(design,t,C_DICE,C)
showC <- reshape(table,timevar="design",idvar="t",direction="wide",
v.names=c("C"))
# knitr::kable(show1, caption="Levels",digits=2)
# knitr::kable(showC[c(1,6,11,16,20),-2], caption="Levels",digits=2)
knitr::kable(showC[c(1,6,11,16,20),], caption="Levels",digits=2)
knitr::kable(showC[c(1,6,11,16,20),-c(1,2)], caption="Levels",digits=2)
table <- master_df %>% select(design,t,mu_DICE,mu)
showmu <- reshape(table,timevar="design",idvar="t",direction="wide",
v.names=c("mu"))
# knitr::kable(show1, caption="Levels",digits=2)
knitr::kable(showmu[c(1,6,11,16,20),-c(1,2)], caption="Levels",digits=2)
knitr::kable(showmu[c(1,6,11,16,20),-c(1,2)], caption="Levels",digits=4)
E_LAND_DICE <- c( 1.5397 , 1.2318 , 0.9854 , 0.7883 , 0.6307 , 0.5045 , 0.4036 , 0.3229 , 0.2583 , 0.2067 , 0.1653 , 0.1323 , 0.1058 , 0.0846 , 0.0677 , 0.0542 , 0.0433 , 0.0347 , 0.0277 , 0.0222 , 0.0178 , 0.0142 , 0.0114 , 0.0091 , 0.0073 , 0.0058 , 0.0047 , 0.0037 , 0.0030 , 0.0024 , 0.0019 , 0.0015 , 0.0012 , 0.0010 , 0.0008 , 0.0006 , 0.0005 , 0.0004 , 0.0003 , 0.0003 , 0.0002 , 0.0002 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000)
library(ggplot2)
ggplot(aes(x=1:60,y=E_LAND_DICE)) + geom_line() +
geom_line(aes(y=E_LAND_SICE))
E_LAND_SICE <- phi0 + phi_land*E_LAND_DICE
phi0 <- 42.2733
phi  <- 1-0.9471
phi_ind <- 1
phi_land <- -0.3128
E_LAND_SICE <- phi0 + phi_land*E_LAND_DICE
library(ggplot2)
ggplot(aes(x=1:60,y=E_LAND_DICE)) + geom_line() +
geom_line(aes(y=E_LAND_SICE))
ggplot(aes(x=1:60,y=E_LAND_DICE)) + geom_line()# +
ggplot(aes(x=seq(from=1,to=60),y=E_LAND_DICE)) + geom_line()# +
E_LAND_DICE <- c( 1.5397 , 1.2318 , 0.9854 , 0.7883 , 0.6307 , 0.5045 , 0.4036 , 0.3229 , 0.2583 , 0.2067 , 0.1653 , 0.1323 , 0.1058 , 0.0846 , 0.0677 , 0.0542 , 0.0433 , 0.0347 , 0.0277 , 0.0222 , 0.0178 , 0.0142 , 0.0114 , 0.0091 , 0.0073 , 0.0058 , 0.0047 , 0.0037 , 0.0030 , 0.0024 , 0.0019 , 0.0015 , 0.0012 , 0.0010 , 0.0008 , 0.0006 , 0.0005 , 0.0004 , 0.0003 , 0.0003 , 0.0002 , 0.0002 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000)
ggplot(aes(x=seq(from=1,to=60),y=E_LAND_DICE)) + geom_line()# +
qplot(x=seq(from=1,to=60),y=E_LAND_DICE)# + geom_line()# +
qplot(x=seq(from=1,to=60),y=E_LAND_DICE) + geom_line(y=E_LAND_SICE)# +
qplot(x=seq(from=1,to=60),y=E_LAND_DICE) + geom_line(y=E_LAND_SICE)# +
qplot(x=seq(from=1,to=60),y=E_LAND_DICE) + geom_line(aes(y=E_LAND_SICE))# +
write.csv(x = cbind(E_LAND_DICE,E_LAND_SICE),file="ELAND.txt")
max(E_LAND_SICE)
max(E_LAND_DICE)
min(E_LAND_DICE)
source('C:/Users/Chris Muris/Dropbox/catastrophe-code/generic-code/dice_parameters.R', echo=TRUE)
source('C:/Users/Chris Muris/Dropbox/catastrophe-code/generic-code/dice_parameters.R', echo=TRUE)
phi_ind
psi
save(list = list(psi),file="psi_out.csv")
save(psi,file="psi_out.csv")
write.csv(psi,file="psi_out.csv")
FORCEX_DICE <- c(0.0080,0.0420,0.0760,0.1100,0.1440,0.1780,0.2120,0.2460,0.2800,0.3140,0.3480,0.3820,0.4160,0.4500,0.4840,0.5180,0.5520,0.5860,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200)
length(FORCEX_DICE)
lp <- 18
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
lagTEMP = TEMP_DICE[1:(lp-1)]
FORC = FORCEX_DICE[2:lp]
lm(TEMP ~ lagTEMP + M + FORC)
C_DICE<-c(46.99,56.25,66.62,78.09,90.67,104.36,119.14,135.01,151.96,169.97,189.02,209.09,230.18,252.25,275.30,299.31,324.27,350.18,377.07,404.98,434.02,464.37,496.07,529.04,563.19,598.46,634.78,672.11,710.37,749.51,789.48,830.23,871.69,913.82,956.55,999.83,1043.62,1087.85,1132.48,1177.46,1222.73,1268.26,1314.01,1359.95,1406.07,1452.38,1498.95,1545.96,1593.73,1642.91,1651.49,1707.43,1760.23,1810.69,1859.37,1906.67,1952.86,1998.72,2044.33,2087.15)
mu_DICE <- c(0.039,0.206,0.231,0.258,0.286,0.316,0.348,0.382,0.417,0.454,0.493,0.534,0.576,0.620,0.665,0.713,0.761,0.812,0.864,0.917,0.972,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,0.903,0.536,0.010)
K_DICE <- c(135.00,161.90,192.52,227.02,265.44,307.84,354.27,404.78,459.42,518.25,581.30,648.61,720.21,796.14,876.43,961.09,1050.12,1143.49,1241.10,1342.70,1447.88,1555.70,1667.67,1785.79,1909.60,2038.75,2172.94,2311.92,2455.47,2603.35,2755.34,2911.24,3070.81,3233.84,3400.10,3569.37,3741.42,3916.04,4092.98,4272.03,4452.95,4635.48,4819.34,5004.18,5189.58,5374.88,5559.09,5740.55,5916.40,6081.57,6226.97,6552.32,6841.84,7104.72,7347.81,7576.11,7793.27,8001.91,8204.97,8404.27)
TEMP_DICE <- c(0.8300,0.9333,1.0426,1.1578,1.2784,1.4037,1.5328,1.6648,1.7987,1.9332,2.0673,2.1996,2.3288,2.4539,2.5735,2.6864,2.7915,2.8874,2.9731,3.0437,3.0985,3.1364,3.1588,3.1690,3.1694,3.1625,3.1501,3.1335,3.1141,3.0928,3.0704,3.0475,3.0246,3.0020,2.9800,2.9589,2.9386,2.9194,2.9013,2.8843,2.8684,2.8536,2.8398,2.8269,2.8151,2.8041,2.7939,2.7845,2.7759,2.7679,2.7605,2.7536,2.7473,2.7414,2.7359,2.7308,2.7261,2.7216,2.7263,2.7692)
M_DICE <- c(818.99,848.27,872.53,898.29,925.28,953.12,981.42,1009.72,1037.55,1064.40,1089.78,1113.18,1134.11,1152.07,1166.62,1177.30,1183.69,1185.41,1182.10,1173.42,1159.09,1138.85,1117.03,1097.89,1081.10,1066.36,1053.41,1042.02,1031.99,1023.16,1015.37,1008.48,1002.39,996.99,992.20,987.93,984.13,980.73,977.68,974.93,972.46,970.22,968.18,966.33,964.63,963.06,961.62,960.28,959.03,957.86,956.77,955.73,954.75,953.81,952.91,952.06,951.23,950.43,964.48,1032.25)
E_DICE <- c(31.3997,29.2369,31.4805,33.5692,35.4304,37.0001,38.2224,39.0488,39.4380,39.3552,38.7721,37.6664,36.0214,33.8262,31.0747,27.7659,23.9032,19.4946,14.5518,9.0884,3.1251,0.0142,0.0114,0.0091,0.0073,0.0058,0.0047,0.0037,0.0030,0.0024,0.0019,0.0015,0.0012,0.0010,0.0008,0.0006,0.0005,0.0004,0.0003,0.0003,0.0002,0.0002,0.0001,0.0001,0.0001,0.0001,0.0001,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,10.8747,51.1932,107.4036)
E_IND_DICE <- c( 29.8600 , 28.0051 , 30.4951 , 32.7809 , 34.7997 , 36.4955 , 37.8188 , 38.7259 , 39.1797 , 39.1485 , 38.6068 , 37.5341 , 35.9156 , 33.7416 , 31.0070 , 27.7117 , 23.8599 , 19.4599 , 14.5241 , 9.0662 , 3.1074 , 0.0000 , 0   , 0   , 0.0000 , 0   , 0.0000 , 0.0000 , 0   , 0.0000 , 0   , 0   , 0.0000 , 0   , 0   , 0.0000 , 0   , 0   , 0   , 0   , 0   , 0   , 0.0000 , 0   , 0   , 0.0000 , 0.0000 , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 10.8747 , 51.1932 , 107.4036)
E_LAND_DICE <- c( 1.5397 , 1.2318 , 0.9854 , 0.7883 , 0.6307 , 0.5045 , 0.4036 , 0.3229 , 0.2583 , 0.2067 , 0.1653 , 0.1323 , 0.1058 , 0.0846 , 0.0677 , 0.0542 , 0.0433 , 0.0347 , 0.0277 , 0.0222 , 0.0178 , 0.0142 , 0.0114 , 0.0091 , 0.0073 , 0.0058 , 0.0047 , 0.0037 , 0.0030 , 0.0024 , 0.0019 , 0.0015 , 0.0012 , 0.0010 , 0.0008 , 0.0006 , 0.0005 , 0.0004 , 0.0003 , 0.0003 , 0.0002 , 0.0002 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000)
I_DICE <- c( 16.4370 , 19.3837 , 22.6671 , 26.2775 , 30.2197 , 34.4984 , 39.1176 , 44.0813 , 49.3929 , 55.0552 , 61.0712 , 67.4431 , 74.1731 , 81.2628 , 88.7127 , 96.5211 , 104.6812 , 113.1763 , 121.9692 , 131.0062 , 140.1479 , 149.8092 , 160.2103 , 171.0221 , 182.2292 , 193.8154 , 205.7646 , 218.0598 , 230.6838 , 243.6189 , 256.8473 , 270.3508 , 284.1111 , 298.1099 , 312.3288 , 326.7493 , 341.3528 , 356.1207 , 371.0337 , 386.0713 , 401.2111 , 416.4264 , 431.6830 , 446.9319 , 462.0976 , 477.0558 , 491.5929 , 505.3324 , 517.5998 , 527.1718 , 575.0714 , 594.5515 , 612.9375 , 630.5086 , 647.4603 , 663.9297 , 680.0126 , 695.9844 , 711.8640 , 726.7739 )
FORCEX_DICE <- c(0.0080,0.0420,0.0760,0.1100,0.1440,0.1780,0.2120,0.2460,0.2800,0.3140,0.3480,0.3820,0.4160,0.4500,0.4840,0.5180,0.5520,0.5860,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200)
lp <- 18
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
lagTEMP = TEMP_DICE[1:(lp-1)]
FORC = FORCEX_DICE[2:lp]
lm(TEMP ~ lagTEMP + M + FORC)
lm(TEMP ~ lagTEMP + log(M) + FORC)
lp <- 18
dM=M_DICE[2:lp]-E_IND_DICE[1:(lp-1)]
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
lm(M ~ lagM + E + Eex)
phi0 <- 42.2733
lp <- 18
dM=M_DICE[2:lp]-E_IND_DICE[1:(lp-1)]
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
lm(M ~ lagM + E + Eex)
summary(lm(M ~ lagM + E + Eex))
dM=M_DICE[2:lp]-(5/3.666)*E_IND_DICE[1:(lp-1)]
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(M ~ lagM + E + Eex))
summary(lm(dM ~ lagM + Eex))
summary(M)
summary(Eex)
5/1.1719
lp <- 18
dM=M_DICE[2:lp]-(5/3.666)*E_IND_DICE[1:(lp-1)]
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(M ~ lagM + E + Eex))
summary(lm(dM ~ lagM + Eex))
lp <- 18
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
lagTEMP = TEMP_DICE[1:(lp-1)]
FORC = FORCEX_DICE[2:lp]
lm(TEMP ~ lagTEMP + log(M) + FORC)
summary(lm(TEMP ~ lagTEMP + log(M) + FORC))
L <- numeric(TDICE)
L[1] <- 6838; # Norhaus' pop0, up from 6514 in 2008 version
popadj <- 0.134 #New parameter
for(t in 1:TDICE) {
POPASYM <- 10500 # Up from 8600
L[t+1] = L[t]*(POPASYM/L[t])^(popadj) # Differs from 2008.
}
gamma <- 0.3 # Cobb-Douglas, elasticity of capital; unchanged
L
# README ------------------------------------------------------------------
# Sets the values for the model parameters from Nordhaus,
#   calibrates values of SICE to DICE
#   and loads some DICE output.
# Load Nordhaus output ----------------------
# DICE output is from spreadsheet, tab "Opttax")
C_DICE<-c(46.99,56.25,66.62,78.09,90.67,104.36,119.14,135.01,151.96,169.97,189.02,209.09,230.18,252.25,275.30,299.31,324.27,350.18,377.07,404.98,434.02,464.37,496.07,529.04,563.19,598.46,634.78,672.11,710.37,749.51,789.48,830.23,871.69,913.82,956.55,999.83,1043.62,1087.85,1132.48,1177.46,1222.73,1268.26,1314.01,1359.95,1406.07,1452.38,1498.95,1545.96,1593.73,1642.91,1651.49,1707.43,1760.23,1810.69,1859.37,1906.67,1952.86,1998.72,2044.33,2087.15)
mu_DICE <- c(0.039,0.206,0.231,0.258,0.286,0.316,0.348,0.382,0.417,0.454,0.493,0.534,0.576,0.620,0.665,0.713,0.761,0.812,0.864,0.917,0.972,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,0.903,0.536,0.010)
K_DICE <- c(135.00,161.90,192.52,227.02,265.44,307.84,354.27,404.78,459.42,518.25,581.30,648.61,720.21,796.14,876.43,961.09,1050.12,1143.49,1241.10,1342.70,1447.88,1555.70,1667.67,1785.79,1909.60,2038.75,2172.94,2311.92,2455.47,2603.35,2755.34,2911.24,3070.81,3233.84,3400.10,3569.37,3741.42,3916.04,4092.98,4272.03,4452.95,4635.48,4819.34,5004.18,5189.58,5374.88,5559.09,5740.55,5916.40,6081.57,6226.97,6552.32,6841.84,7104.72,7347.81,7576.11,7793.27,8001.91,8204.97,8404.27)
TEMP_DICE <- c(0.8300,0.9333,1.0426,1.1578,1.2784,1.4037,1.5328,1.6648,1.7987,1.9332,2.0673,2.1996,2.3288,2.4539,2.5735,2.6864,2.7915,2.8874,2.9731,3.0437,3.0985,3.1364,3.1588,3.1690,3.1694,3.1625,3.1501,3.1335,3.1141,3.0928,3.0704,3.0475,3.0246,3.0020,2.9800,2.9589,2.9386,2.9194,2.9013,2.8843,2.8684,2.8536,2.8398,2.8269,2.8151,2.8041,2.7939,2.7845,2.7759,2.7679,2.7605,2.7536,2.7473,2.7414,2.7359,2.7308,2.7261,2.7216,2.7263,2.7692)
M_DICE <- c(818.99,848.27,872.53,898.29,925.28,953.12,981.42,1009.72,1037.55,1064.40,1089.78,1113.18,1134.11,1152.07,1166.62,1177.30,1183.69,1185.41,1182.10,1173.42,1159.09,1138.85,1117.03,1097.89,1081.10,1066.36,1053.41,1042.02,1031.99,1023.16,1015.37,1008.48,1002.39,996.99,992.20,987.93,984.13,980.73,977.68,974.93,972.46,970.22,968.18,966.33,964.63,963.06,961.62,960.28,959.03,957.86,956.77,955.73,954.75,953.81,952.91,952.06,951.23,950.43,964.48,1032.25)
E_DICE <- c(31.3997,29.2369,31.4805,33.5692,35.4304,37.0001,38.2224,39.0488,39.4380,39.3552,38.7721,37.6664,36.0214,33.8262,31.0747,27.7659,23.9032,19.4946,14.5518,9.0884,3.1251,0.0142,0.0114,0.0091,0.0073,0.0058,0.0047,0.0037,0.0030,0.0024,0.0019,0.0015,0.0012,0.0010,0.0008,0.0006,0.0005,0.0004,0.0003,0.0003,0.0002,0.0002,0.0001,0.0001,0.0001,0.0001,0.0001,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,10.8747,51.1932,107.4036)
E_IND_DICE <- c( 29.8600 , 28.0051 , 30.4951 , 32.7809 , 34.7997 , 36.4955 , 37.8188 , 38.7259 , 39.1797 , 39.1485 , 38.6068 , 37.5341 , 35.9156 , 33.7416 , 31.0070 , 27.7117 , 23.8599 , 19.4599 , 14.5241 , 9.0662 , 3.1074 , 0.0000 , 0   , 0   , 0.0000 , 0   , 0.0000 , 0.0000 , 0   , 0.0000 , 0   , 0   , 0.0000 , 0   , 0   , 0.0000 , 0   , 0   , 0   , 0   , 0   , 0   , 0.0000 , 0   , 0   , 0.0000 , 0.0000 , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 10.8747 , 51.1932 , 107.4036)
E_LAND_DICE <- c( 1.5397 , 1.2318 , 0.9854 , 0.7883 , 0.6307 , 0.5045 , 0.4036 , 0.3229 , 0.2583 , 0.2067 , 0.1653 , 0.1323 , 0.1058 , 0.0846 , 0.0677 , 0.0542 , 0.0433 , 0.0347 , 0.0277 , 0.0222 , 0.0178 , 0.0142 , 0.0114 , 0.0091 , 0.0073 , 0.0058 , 0.0047 , 0.0037 , 0.0030 , 0.0024 , 0.0019 , 0.0015 , 0.0012 , 0.0010 , 0.0008 , 0.0006 , 0.0005 , 0.0004 , 0.0003 , 0.0003 , 0.0002 , 0.0002 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000)
I_DICE <- c( 16.4370 , 19.3837 , 22.6671 , 26.2775 , 30.2197 , 34.4984 , 39.1176 , 44.0813 , 49.3929 , 55.0552 , 61.0712 , 67.4431 , 74.1731 , 81.2628 , 88.7127 , 96.5211 , 104.6812 , 113.1763 , 121.9692 , 131.0062 , 140.1479 , 149.8092 , 160.2103 , 171.0221 , 182.2292 , 193.8154 , 205.7646 , 218.0598 , 230.6838 , 243.6189 , 256.8473 , 270.3508 , 284.1111 , 298.1099 , 312.3288 , 326.7493 , 341.3528 , 356.1207 , 371.0337 , 386.0713 , 401.2111 , 416.4264 , 431.6830 , 446.9319 , 462.0976 , 477.0558 , 491.5929 , 505.3324 , 517.5998 , 527.1718 , 575.0714 , 594.5515 , 612.9375 , 630.5086 , 647.4603 , 663.9297 , 680.0126 , 695.9844 , 711.8640 , 726.7739 )
FORCEX_DICE <- c(0.0080,0.0420,0.0760,0.1100,0.1440,0.1780,0.2120,0.2460,0.2800,0.3140,0.3480,0.3820,0.4160,0.4500,0.4840,0.5180,0.5520,0.5860,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200)
DICE_output <- cbind(C_DICE,K_DICE,mu_DICE,TEMP_DICE,M_DICE,E_DICE,I_DICE)
# Starting values of the state variables
M0 <- M_DICE[1] # Initial value of CO2 concentrations, Was 808.9
TEMP0 <- TEMP_DICE[1] # Initial value of Temperature, Was 0.731
K0 <- K_DICE[1] # initial value of capital, down from 137
# Scaling for chebyshev polynomial regression
scale <- numeric(3)+1
# Calibrated --------------------------------------------------------------
# Parameters we may change to calibrate SICE to DICE
# Using: lm(TEMP_DICE[2:60]~TEMP_DICE[1:59]+log(M_DICE[2:60]))
# lp <- 18
# M = M_DICE[2:lp]
# TEMP = TEMP_DICE[2:lp]
# lagTEMP = TEMP_DICE[1:(lp-1)]
# FORC = FORCEX_DICE[2:lp]
# summary(lm(TEMP ~ lagTEMP + log(M) + FORC))
beta0 <- -3.1761
beta1 <- 0.9042
beta2 <- 0.4995
# - Emissions to concentrations
# Nordhaus has:
# mmat(t+1).. MAT(t+1) =E= MAT(t)*b11 + MU(t)*b21 + (E(t)*(5/3.666));
# mml(t+1).. ML(t+1) =E= ML(t)*b33 + MU(t)*b23;
# mmu(t+1).. MU(t+1) =E= MAT(t)*b12 + MU(t)*b22 + ML(t)*b32;
#
# This depends on the parameters in DICE's "Carbon transition matrix",
#    b11-b33, and on the carbon intensity. b11, b21, b22, b32, b33 are
#    defined in terms of the other ones
#
# Relevant params:
#                      2013        2008
# b12                  0.088       0.18
# b23                  0.00250     0.05
# multiplier for E     5/3.666     1
#
# We had: M(t+1) = (1-phi) M(t) + E(t), with phi = 0.0524.
#
# We update our specication, and need to calibrate parameters for:
#    E.mt <- M.new - (1 - phi) * M.mt - phi0 - phi_land*E_LAND.t
# where E.mt is E[t] and M.new is M[t+1], M.mt is M[t]. Then
#    the above equals
# We will estimate the parameters in:
#   M.new - E.mt = (1 - phi) * M.mt + phi0 + phi_land*E_LAND.t
# using the first 15 time periods.
#
# lp <- 18
# dM=M_DICE[2:lp]-(5/3.666)*E_IND_DICE[1:(lp-1)]
# M = M_DICE[2:lp]
# E = E_IND_DICE[1:(lp-1)]
# lagM=M_DICE[1:(lp-1)]
# Eex=E_LAND_DICE[1:(lp-1)]
# summary(lm(M ~ lagM + E + Eex))
# summary(lm(dM ~ lagM + Eex))
#
# Call:
#   lm(formula = dM ~ lagM + Eex)
#
# Coefficients:
#   (Intercept)         lagM          Eex
# 42.2735       0.9471      -0.3128
phi0 <- 42.2733
phi  <- 1-0.9471
phi_ind <- 1
phi_land <- -0.3128
E_LAND_SICE <- phi0 + phi_land*E_LAND_DICE
# library(ggplot2)
# ggplot::qplot(x=1:60,y=E_LAND_DICE)
# DICE values -----------------------------
#    the Reference manual by Nordhaus from dicemodel.net,
#    filename "DICE_Manual_1004r1.pdf".
# Timing
tstep <- 5 # Number of years per time period, now 5.
TDICE <- 60    # Number of time periods, 60 in Nordhaus
# Preferences
alpha <- 1.45 # Risk aversion parameter, down from 2. Is called "elasmu" in Nordhaus' GAMS code.
prstp <- 0.015 # "Time preference plus risk (per year)"
# Note: rr(t) is Nordhaus' discount factor, which we call rho
rr <- numeric(TDICE)
for(t in 1:TDICE){
rr[t] = 1/((1+prstp)^(tstep*(t-1)));
}
# Population; checked against Excel, is OK.
L <- numeric(TDICE)
L[1] <- 6838; # Norhaus' pop0, up from 6514 in 2008 version
popadj <- 0.134 #New parameter
for(t in 1:TDICE) {
POPASYM <- 10500 # Up from 8600
L[t+1] = L[t]*(POPASYM/L[t])^(popadj) # Differs from 2008.
}
L
source('~/catastrophe-code/generic-code/design_parameters.R', echo=TRUE)
design_mat
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp <- 18
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(M ~ lagM + E + Eex))
summary(lm(dM ~ lagM + Eex))
dM=M_DICE[2:lp]-(5/3.666)*E_IND_DICE[1:(lp-1)]
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(M ~ lagM + E + Eex))
summary(lm(dM ~ lagM + Eex))
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(M ~ lagM + E + Eex))
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp <- 18
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
lagTEMP = TEMP_DICE[1:(lp-1)]
FORC = FORCEX_DICE[2:lp]
summary(lm(TEMP ~ lagTEMP + log(M) + FORC))
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp <- 18
dM = M_DICE[2:lp] - 5/3.666 * E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(dM ~ lagM + Eex))
source('~/catastrophe-code/generic-code/dice_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp <- 18
dM = M_DICE[2:lp] - 5 * E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(dM ~ lagM + Eex))
lp <- 18
dM = M_DICE[2:lp] - 5/2.5 * E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(dM ~ lagM + Eex))
dM = M_DICE[2:lp] - 5/3 * E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(dM ~ lagM + Eex))
source('~/catastrophe-code/generic-code/dice_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
source('~/catastrophe-code/generic-code/design_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp <- 18
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
summary(lm(M ~ lagM + E + Eex))
lp <- 18
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
lagTEMP = TEMP_DICE[1:(lp-1)]
FORC = FORCEX_DICE[2:lp]
summary(lm(TEMP ~ lagTEMP + log(M) + FORC))
source('~/catastrophe-code/generic-code/dice_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp <- 18
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
lagTEMP = TEMP_DICE[1:(lp-1)]
FORC = FORCEX_DICE[2:lp]
summary(lm(TEMP ~ lagTEMP + log(M) + FORC))
summary(lm(TEMP ~ lagTEMP + log(M)))
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
dTEMP = TEMP - 0.75*log(M)
summary(lm(dTEMP ~ lagTEMP ))
source('~/catastrophe-code/generic-code/dice_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
dTEMP = TEMP - 0.35*log(M)
summary(lm(dTEMP ~ lagTEMP ))
source('~/catastrophe-code/generic-code/dice_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
# README ------------------------------------------------------------------
# Sets the values for the model parameters from Nordhaus,
#   calibrates values of SICE to DICE
#   and loads some DICE output.
# Load Nordhaus output ----------------------
# DICE output is from spreadsheet, tab "Opttax")
C_DICE<-c(46.99,56.25,66.62,78.09,90.67,104.36,119.14,135.01,151.96,169.97,189.02,209.09,230.18,252.25,275.30,299.31,324.27,350.18,377.07,404.98,434.02,464.37,496.07,529.04,563.19,598.46,634.78,672.11,710.37,749.51,789.48,830.23,871.69,913.82,956.55,999.83,1043.62,1087.85,1132.48,1177.46,1222.73,1268.26,1314.01,1359.95,1406.07,1452.38,1498.95,1545.96,1593.73,1642.91,1651.49,1707.43,1760.23,1810.69,1859.37,1906.67,1952.86,1998.72,2044.33,2087.15)
mu_DICE <- c(0.039,0.206,0.231,0.258,0.286,0.316,0.348,0.382,0.417,0.454,0.493,0.534,0.576,0.620,0.665,0.713,0.761,0.812,0.864,0.917,0.972,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,0.903,0.536,0.010)
K_DICE <- c(135.00,161.90,192.52,227.02,265.44,307.84,354.27,404.78,459.42,518.25,581.30,648.61,720.21,796.14,876.43,961.09,1050.12,1143.49,1241.10,1342.70,1447.88,1555.70,1667.67,1785.79,1909.60,2038.75,2172.94,2311.92,2455.47,2603.35,2755.34,2911.24,3070.81,3233.84,3400.10,3569.37,3741.42,3916.04,4092.98,4272.03,4452.95,4635.48,4819.34,5004.18,5189.58,5374.88,5559.09,5740.55,5916.40,6081.57,6226.97,6552.32,6841.84,7104.72,7347.81,7576.11,7793.27,8001.91,8204.97,8404.27)
TEMP_DICE <- c(0.8300,0.9333,1.0426,1.1578,1.2784,1.4037,1.5328,1.6648,1.7987,1.9332,2.0673,2.1996,2.3288,2.4539,2.5735,2.6864,2.7915,2.8874,2.9731,3.0437,3.0985,3.1364,3.1588,3.1690,3.1694,3.1625,3.1501,3.1335,3.1141,3.0928,3.0704,3.0475,3.0246,3.0020,2.9800,2.9589,2.9386,2.9194,2.9013,2.8843,2.8684,2.8536,2.8398,2.8269,2.8151,2.8041,2.7939,2.7845,2.7759,2.7679,2.7605,2.7536,2.7473,2.7414,2.7359,2.7308,2.7261,2.7216,2.7263,2.7692)
M_DICE <- c(818.99,848.27,872.53,898.29,925.28,953.12,981.42,1009.72,1037.55,1064.40,1089.78,1113.18,1134.11,1152.07,1166.62,1177.30,1183.69,1185.41,1182.10,1173.42,1159.09,1138.85,1117.03,1097.89,1081.10,1066.36,1053.41,1042.02,1031.99,1023.16,1015.37,1008.48,1002.39,996.99,992.20,987.93,984.13,980.73,977.68,974.93,972.46,970.22,968.18,966.33,964.63,963.06,961.62,960.28,959.03,957.86,956.77,955.73,954.75,953.81,952.91,952.06,951.23,950.43,964.48,1032.25)
E_DICE <- c(31.3997,29.2369,31.4805,33.5692,35.4304,37.0001,38.2224,39.0488,39.4380,39.3552,38.7721,37.6664,36.0214,33.8262,31.0747,27.7659,23.9032,19.4946,14.5518,9.0884,3.1251,0.0142,0.0114,0.0091,0.0073,0.0058,0.0047,0.0037,0.0030,0.0024,0.0019,0.0015,0.0012,0.0010,0.0008,0.0006,0.0005,0.0004,0.0003,0.0003,0.0002,0.0002,0.0001,0.0001,0.0001,0.0001,0.0001,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,10.8747,51.1932,107.4036)
E_IND_DICE <- c( 29.8600 , 28.0051 , 30.4951 , 32.7809 , 34.7997 , 36.4955 , 37.8188 , 38.7259 , 39.1797 , 39.1485 , 38.6068 , 37.5341 , 35.9156 , 33.7416 , 31.0070 , 27.7117 , 23.8599 , 19.4599 , 14.5241 , 9.0662 , 3.1074 , 0.0000 , 0   , 0   , 0.0000 , 0   , 0.0000 , 0.0000 , 0   , 0.0000 , 0   , 0   , 0.0000 , 0   , 0   , 0.0000 , 0   , 0   , 0   , 0   , 0   , 0   , 0.0000 , 0   , 0   , 0.0000 , 0.0000 , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 0   , 10.8747 , 51.1932 , 107.4036)
E_LAND_DICE <- c( 1.5397 , 1.2318 , 0.9854 , 0.7883 , 0.6307 , 0.5045 , 0.4036 , 0.3229 , 0.2583 , 0.2067 , 0.1653 , 0.1323 , 0.1058 , 0.0846 , 0.0677 , 0.0542 , 0.0433 , 0.0347 , 0.0277 , 0.0222 , 0.0178 , 0.0142 , 0.0114 , 0.0091 , 0.0073 , 0.0058 , 0.0047 , 0.0037 , 0.0030 , 0.0024 , 0.0019 , 0.0015 , 0.0012 , 0.0010 , 0.0008 , 0.0006 , 0.0005 , 0.0004 , 0.0003 , 0.0003 , 0.0002 , 0.0002 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0001 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000 , 0.0000)
I_DICE <- c( 16.4370 , 19.3837 , 22.6671 , 26.2775 , 30.2197 , 34.4984 , 39.1176 , 44.0813 , 49.3929 , 55.0552 , 61.0712 , 67.4431 , 74.1731 , 81.2628 , 88.7127 , 96.5211 , 104.6812 , 113.1763 , 121.9692 , 131.0062 , 140.1479 , 149.8092 , 160.2103 , 171.0221 , 182.2292 , 193.8154 , 205.7646 , 218.0598 , 230.6838 , 243.6189 , 256.8473 , 270.3508 , 284.1111 , 298.1099 , 312.3288 , 326.7493 , 341.3528 , 356.1207 , 371.0337 , 386.0713 , 401.2111 , 416.4264 , 431.6830 , 446.9319 , 462.0976 , 477.0558 , 491.5929 , 505.3324 , 517.5998 , 527.1718 , 575.0714 , 594.5515 , 612.9375 , 630.5086 , 647.4603 , 663.9297 , 680.0126 , 695.9844 , 711.8640 , 726.7739 )
FORCEX_DICE <- c(0.0080,0.0420,0.0760,0.1100,0.1440,0.1780,0.2120,0.2460,0.2800,0.3140,0.3480,0.3820,0.4160,0.4500,0.4840,0.5180,0.5520,0.5860,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200,0.6200)
DICE_output <- cbind(C_DICE,K_DICE,mu_DICE,TEMP_DICE,M_DICE,E_DICE,I_DICE)
# Starting values of the state variables
M0 <- M_DICE[1] # Initial value of CO2 concentrations, Was 808.9
TEMP0 <- TEMP_DICE[1] # Initial value of Temperature, Was 0.731
K0 <- K_DICE[1] # initial value of capital, down from 137
# Scaling for chebyshev polynomial regression
scale <- numeric(3)+1
# Calibrated --------------------------------------------------------------
lp <- 18 #period over which to calibrate
# Parameters we may change to calibrate SICE to DICE
# Using: lm(TEMP_DICE[2:60]~TEMP_DICE[1:59]+log(M_DICE[2:60]))
M = M_DICE[2:lp]
TEMP = TEMP_DICE[2:lp]
lagTEMP = TEMP_DICE[1:(lp-1)]
FORC = FORCEX_DICE[2:lp]
# summary(lm(TEMP ~ lagTEMP + log(M) + FORC)) #too much driven by DICE
summary(lm(TEMP ~ lagTEMP + log(M)))
lmTEMP <- lm(TEMP ~ lagTEMP + log(M))
beta0 <- lmTEMP$coefficients["(Intercept)"]
beta0
beta0 <- lmTEMP$coefficients["(Intercept)"]
beta1 <- lmTEMP$coefficients["lagTEMP"]
beta2 <- lmTEMP$coefficients["log(M)"]
beta3 <- 0
beta0
beta1
beta2
sqrt(beta2)
beta2 * c(1,1)
M = M_DICE[2:lp]
E = E_IND_DICE[1:(lp-1)]
lagM=M_DICE[1:(lp-1)]
Eex=E_LAND_DICE[1:(lp-1)]
lmM <- lm(M ~ lagM + E + Eex)
summary(lmM)
lmM <- lm(dm ~ lagM + Eex)
summary(lmM)
dM = M_DICE[2:lp] - 5/3.666 * E_IND_DICE[1:(lp-1)]
lmM <- lm(dM ~ lagM + Eex)
summary(lmM)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
source('~/catastrophe-code/generic-code/design_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp
MM
T
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp
MM
T\
T
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
lp
MM
T
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
MM
lp
T
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
MM
T
lp
source('~/catastrophe-code/generic-code/design_parameters.R', echo=TRUE)
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
MM
lp
T
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
utility_vals <- c("power","Pareto") #,"Pareto")
distribution_vals <- c("Normal","t") # in c("Normal","t")
scenario_vals <- c(1) #,3) # in c(1,2,3)
tauvals <- c(0,0.03,0.06)
design_mat <- expand.grid(utility_vals,distribution_vals,scenario_vals,tauvals)
design_mat
colnames(design_mat) <- c("utility","distribution","scenario","tau")
source('~/catastrophe-code/generic-code/design_parameters.R', echo=TRUE)
design_mat
source('~/catastrophe-code/generic-code/design_parameters.R', echo=TRUE)
design_mat
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
source("results.R")
source('~/catastrophe-code/generic-code/main.R', echo=TRUE)
source("results.R")
source('~/catastrophe-code/code/main.R', echo=TRUE)
setwd("~/chrismuris.github.io")
rmarkdown::render_site()
